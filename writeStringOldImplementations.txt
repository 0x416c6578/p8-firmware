void writeString(uint32_t x, uint32_t y, uint8_t pixelsPerPixel, String string, uint16_t colour) {
  int currentLine = 0; //Current line
  int charPos = 0; //Position of the character we are on along the line
  int stringLen = string.length();
  for (int i = 0; i < stringLen; i++) { //Loop through every character of the string
    //If printing the next character would result in it being of screen
    if (x + charPos * pixelsPerPixel * FONT_WIDTH + pixelsPerPixel * charPos > 240 - FONT_WIDTH*pixelsPerPixel) {
      currentLine++;
      charPos = 0;
    }
    writeChar(x + charPos * pixelsPerPixel * FONT_WIDTH + pixelsPerPixel * charPos, y + currentLine * 8 * pixelsPerPixel, pixelsPerPixel, string[i], colour);
    charPos++;
  }
}

void writeString(uint32_t x, uint32_t y, uint8_t pixelsPerPixel, char* string, uint16_t colour) {
  int currentLine = 0; //Current line
  int charPos = 0; //Position of the character we are on along the line
  int i = 0;
  while (string[i] != 0) { //Loop through every character of the string (only stop when you reach the null terminator)
    //If printing the next character would result in it being of screen
    if (x + charPos * pixelsPerPixel * FONT_WIDTH + pixelsPerPixel * charPos > 240 - FONT_WIDTH*pixelsPerPixel) {
      currentLine++;
      charPos = 0;
    }
    writeChar(x + charPos * pixelsPerPixel * FONT_WIDTH + pixelsPerPixel * charPos, y + currentLine * 8 * pixelsPerPixel, pixelsPerPixel, string[i], colour);
    charPos++;
    i++;
  }
}
